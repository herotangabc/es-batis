# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package
    # This specifies that the build will be triggered when we publish a release
on:
  release:
   types: [created]
# on:
#   push:
#     branches:
#       - main
#     tags:
#       - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
#       - env:
#           EVENT_CONTEXT: ${{ toJSON(github) }}
#         run: |
#           echo $EVENT_CONTEXT
      - run: git config --global init.defaultBranch main
      - uses: actions/checkout@v2
        with:
        # "ref" specifies the branch to check out.
        # "github.event.release.target_commitish" is a global variable and specifies the branch the release targeted
          ref: ${{ github.event.release.target_commitish }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - run: yarn
      - run: git config --global user.name "GitHub CD bot"
      - run: git config --global user.email "github-cd-bot@example.com"
      - run: yarn version --new-version ${{ github.event.release.tag_name }}
      - run: yarn build
      - run: yarn test
#       - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > $NPM_CONFIG_USERCONFIG
#         env:
#           NPM_TOKEN: ${{secrets.NPM_TOKEN}}
      - run: yarn publish
        env:
        # Use a token to publish to NPM. See below for how to set it up
         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: git push
        env:
        # The secret is passed automatically. Nothing to configure.
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: main

#   publish-npm:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2
#         with:
#           node-version: 14
#           registry-url: https://registry.npmjs.org/
# #      - run: npm ci
# #       - run: npm set init.author.name "herotangabc"
# #       - run: npm set init.author.email "herotangabc@hotmail.com"
# #       - run: npm set init.author.url "https://www.npmjs.com/~herotangabc"
#       - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > $NPM_CONFIG_USERCONFIG
#         env:
#           NPM_TOKEN: ${{secrets.NPM_TOKEN}}
#       - run: yarn publish


